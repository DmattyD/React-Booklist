{"version":3,"sources":["App.js","Components/Create.js","Components/BookEdit.js","Components/Show.js","Components/Delete.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Booklist","compareBy","bind","assertThisInitialized","sortBy","key","a","b","arrayCopy","toConsumableArray","sort","setState","_this2","fetch","then","result","json","response","_this3","console","log","react_default","createElement","className","style","textAlign","onClick","map","index","react_router_dom","to","concat","_id","value","e","getBook","target","Title","Author","Pages","Category","Completed","Component","Create","Thoughts","handleChange","defineProperty","name","handleSubmit","_callee","data","regenerator_default","wrap","_context","prev","next","preventDefault","JSON","stringify","method","body","headers","Content-Type","history","push","stop","onSubmit","for","type","onChange","placeholder","id","defaultValue","cols","row","Edit","componentDidMount","asyncToGenerator","mark","pathname","slice","BooklistOriginal","_ref2","_callee2","newBook","updatedBook","_context2","assign","_x","apply","arguments","_ref3","_callee3","_context3","_x2","location","disabled","rows","Show","deleteBook","Delete","class","render","title","delete","ReactDOM","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.da613e9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst Row = ({Title, Author, Pages, Category, Completed}) => (\n  <div className=\"row\">\n    <div>{Title}</div>\n    <div>{Author}</div>\n    <div>{Pages}</div>\n    <div>{Category}</div>    \n    <div>{Completed}</div>    \n  </div>\n);\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.\n    state = {\n      Booklist: []};\n      \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);}\n\n    compareBy(key) {\n      return function (a, b) {\n        if (a[key] < b[key]) return -1;\n        if (a[key] > b[key]) return 1;\n        return 0\n      };\n    }\n  \n    sortBy(key) {\n      let arrayCopy = [...this.state.Booklist];\n      arrayCopy.sort(this.compareBy(key));\n      this.setState({Booklist: arrayCopy})\n    }\n     \n      componentDidMount() {\n        fetch('https://booklist-server.herokuapp.com/')\n        .then(result => {\n          return result.json();\n        })\n \n          .then(response => {\n            this.setState({ Booklist: response}) /// ONLY RESPONSE, not response.data\n        })\n      }\n\n    //   getBook = async(e) => {\n    //     const _id = this.props.match.params.id;\n    //     /// this is the get method\n    //     await fetch(`http://localhost:4000/Show/${_id}`)\n    //     .then(result => {\n    //         return result.json();\n    //     })\n    //     .then(response => {\n    //         this.setState({Booklist: response})\n    //     })\n        \n    // }\n  render() { \n    console.log(this.state.Booklist)\n    \n    return (\n    <div className=\"container\">\n       <div className=\"panel panel-default\">\n           <div className=\"panel-heading\">\n             <h3 className=\"panel-title\" style={{textAlign: \"center\"}}>\n                 BOOK LIST\n              </h3>\n           </div>\n           <div className=\"panel-body\">\n             <div className>\n             <h4 className = \"Completed Books\">My Book List</h4>\n           </div>\n           <table className=\"table table-stripe\">\n            <thead>\n              <tr>\n                <th onClick={()=>this.sortBy('Title')}>Title</th>\n                <th onClick={()=>this.sortBy('Author')}>Author</th>\n                <th onClick={()=>this.sortBy('Pages')}>Pages</th>\n                <th onClick={()=>this.sortBy('Category')}>Category</th>\n                <th onClick={()=>this.sortBy('Completed')}>Completed</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.Booklist.map((Booklist, index) => \n                 <tr key={index}>\n                  <td><Link to={`/Show/${Booklist._id}`} value={Booklist._id} onClick={(e)=>this.getBook(e.target.value)}>{Booklist.Title}</Link></td>\n                  <td >{Booklist.Author}</td>\n                  <td>{Booklist.Pages}</td>\n                  <td>{Booklist.Category}</td> \n                  <td>{Booklist.Completed}</td>\n                </tr> \n                )}\n            </tbody> \n           </table>\n           <Link className=\"btn btn-success\" to=\"/Create\">Add Book</Link>\n           </div>\n        </div>\n    </div>\n  )}}\nexport default App;\n","import React, { Component } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Create extends Component {\r\n\r\n    state = {\r\n        Title: '',\r\n        Author: '',\r\n        Pages: 0,\r\n        Thoughts: '',\r\n        Completed: '',\r\n        Category: '',\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        }, console.log(e.target.name, e.target.value))\r\n\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const data = JSON.stringify(this.state)\r\n        await fetch(\"https://booklist-server.herokuapp.com/Create\", {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n            \r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    \r\n\r\nrender()\r\n{\r\n    return (\r\n\r\n        <div>\r\n            <h3 className=\"panel-title\">\r\n                ADD BOOK</h3>\r\n\r\n            <div className=\"panel-body\">\r\n                <h4><Link to=\"/\" className=\"btn btn-primary\">Book List</Link></h4>\r\n            </div>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label for=\"title\">Title:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"Title\" value={this.Title} onChange={this.handleChange} placeholder=\"Title\" />\r\n                    <label for=\"author\">Author:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"Author\" value={this.Author} onChange={this.handleChange} placeholder=\"Author\" />\r\n                    <label for=\"categotry\">Category:</label>\r\n                    <select id=\"category\" className=\"form-control\" name=\"Category\" value={this.Category} onChange={this.handleChange} placeholder=\"Category\">\r\n                        <option defaultValue=\"uncategorized\">Pick a Category</option>\r\n                        <option value=\"Sci-fi\">Sci-Fi</option>\r\n                        <option value=\"Fantasy\">Fantasy</option>\r\n                        <option value=\"Educational\">Educational</option>\r\n                        <option value=\"Educational\">Romance</option>\r\n                        <option value=\"Educational\">Urban Fantasy</option>\r\n                        <option value=\"Educational\">Self-Help</option>\r\n                        <option value=\"Educational\">Non-Fiction</option>\r\n                        </select>\r\n                    <label for=\"Pages\">Pages:</label>\r\n                    <input type=\"number\" className=\"form-control\" name=\"Pages\" value={this.Pages} onChange={this.handleChange} placeholder=\"Pages\" />\r\n                    <label for=\"Completed\">Completed:</label>\r\n                    <select id=\"completed\" className=\"form-control\" name=\"Completed\" value={this.Completed} onChange={this.handleChange} placeholder=\"Did you finish the book?\">\r\n                        <option defaultValue=\"No\">No</option>\r\n                        <option value=\"In Progress\">In Progress</option>\r\n                        <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n                    <label for=\"Thoughts\">Thoughts:</label>\r\n                    <textArea type=\"text\" className=\"form-control\" name=\"Thoughts\" cols=\"8\" row=\"3\" onChange={this.handleChange} placeholder=\"Thoughts\">{this.Thoughts}</textArea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n\r\n\r\n    )\r\n}}","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class Edit extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.\r\n        state = {\r\n        pathname: this.props.location.pathname,\r\n        Booklist: [],\r\n        BooklistOriginal: [],\r\n        };}\r\n\r\n        // binding only needed if onChange is not an arrow function\r\n        // this.onChangeBookTitle = this.onChangeBookTitle.bind(this);\r\n        // this.onChangeBookAuthor = this.onChangeBookAuthor.bind(this);\r\n        // this.onchangeBookPages = this.onchangeBookPages.bind(this);\r\n        // this.onchangeBookCompleted = this.onchangeBookCompleted.bind(this);\r\n        // this.onchangeBookThoughts = this.onchangeBookThoughts.bind(this);\r\n        // this.onchangeBookCategory = this.onchangeBookCategory.bind(this);}\r\n    \r\n    componentDidMount = async () => {\r\n        const id = this.state.pathname.slice(6,)\r\n        console.log(id)  \r\n        /// this is the get method\r\n         await fetch(`https://booklist-server.herokuapp.com/Show/${id}`)\r\n        .then(result => {\r\n            return result.json();\r\n        })\r\n        .then(response => {\r\n            this.setState({Booklist: response})\r\n            this.setState({BooklistOriginal: response})\r\n        })\r\n    }\r\n    handleChange = async (e) => {\r\n       await this.setState({\r\n         Booklist:{   [e.target.name]: e.target.value}\r\n        }, console.log(this.state.Booklist));\r\n       \r\n        const newBook = this.state.Booklist\r\n\r\n        const updatedBook = Object.assign(this.state.BooklistOriginal, newBook)\r\n        this.setState({Booklist : updatedBook})\r\n    }\r\n    \r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const id = this.state.pathname.slice(6,)\r\n        const data = JSON.stringify(this.state.Booklist)\r\n        await fetch(`https://booklist-server.herokuapp.com/Edit/${id}`, {\r\n            method: \"PUT\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n            <h3 className=\"panel-title\">\r\n            Update Thoughts\r\n            </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n            <h4><Link to='/' className=\"btn btn-primary\">Book List</Link></h4>\r\n            <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n            <label for=\"title\">Title:</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"Title\" value={this.state.Booklist.Title}  placeholder=\"Title\" disabled/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label for=\"author\">Author:</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"Author\" value={this.state.Booklist.Author} placeholder=\"Author\" disabled />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label for=\"Pages\">Pages:</label>\r\n            <input type=\"number\" className=\"form-control\" name=\"Pages\" value={this.state.Booklist.Pages} placeholder=\"Pages\" disabled/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label for=\"Category\">Category:</label>\r\n            <select id=\"category\" className=\"form-control\" name=\"Category\" value={this.state.Booklist.Category} onChange={this.handleChange} placeholder=\"Category\">\r\n                        <option defaultValue=\"uncategorized\">Pick a Category</option>\r\n                        <option value=\"Sci-fi\">Sci-Fi</option>\r\n                        <option value=\"Fantasy\">Fantasy</option>\r\n                        <option value=\"Educational\">Educational</option>\r\n                        <option value=\"Educational\">Romance</option>\r\n                        <option value=\"Educational\">Urban Fantasy</option>\r\n                        <option value=\"Educational\">Self-Help</option>\r\n                        <option value=\"Educational\">Non-Fiction</option>\r\n                        </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label for=\"Thoughts\">Thoughts</label>\r\n            <textArea type=\"text\" className=\"form-control\" name=\"Thoughts\" value={this.state.Booklist.Thoughts} onChange={this.handleChange} placeholder=\"Thoughts\" cols=\"8\" rows=\"3\">{this.state.Booklist.Thoughts}</textArea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n           <label for=\"Completed\">Completed</label>\r\n           <select id=\"completed\" className=\"form-control\" name=\"Completed\" value={this.Completed} onChange={this.handleChange} placeholder={this.Completed}>\r\n                        \r\n                        <option value=\"No\">No</option>\r\n                        <option value=\"In Progress\">In Progress</option>\r\n                        <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n            <button type =\"submit\" onClick={this.handleSubmit} className=\"btn btn-success\">Submit</button>\r\n            <Link to={`/`} className=\"btn btn-warning\">Cancel</Link> &nbsp;\r\n            </div>\r\n            \r\n            \r\n            \r\n            </form>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    }\r\n\r\n    ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Show extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.\r\n        state = {\r\n        pathname: this.props.location.pathname,\r\n        Booklist: []}\r\n         };\r\n    \r\n\r\ncomponentDidMount = async () => {\r\n    const id = this.state.pathname.slice(6,)\r\n    console.log(id)  \r\n    /// this is the get method\r\n     await fetch(`https://booklist-server.herokuapp.com/Show/${id}`)\r\n    .then(result => {\r\n        return result.json();\r\n    })\r\n    .then(response => {\r\n        this.setState({Booklist: response})\r\n    })\r\n    \r\n}\r\n/// if I want to reload a page after updating, call the componentDidMount() with \";this.componentDidMount();\" this essentially reloads state\r\n\r\ndeleteBook = async (e) => {\r\n    const id = this.state.pathname.slice(6)\r\n    let data = JSON.stringify({_id:id}) /// this is where I assign the delete by id data, to be called in the Delete method\r\n    \r\n    console.log(data)\r\n   await fetch(`https://booklist-server.herokuapp.com/Show/${id}`,\r\n       {\r\n       method: \"DELETE\",\r\n       body: data,\r\n     headers: {\r\n         \"Content-Type\": \"application/json\" /// this is required\r\n     }\r\n \r\n    });this.props.history.push('/')\r\n}\r\n\r\nrender() {\r\n  \r\n    return(\r\n        <div className=\"container\">\r\n                <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\" style={{textAlign: \"center\"}}>\r\n                <h4><Link to=\"/\">Book List</Link></h4>\r\n                <h3>\r\n                {this.state.Booklist.Title}\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n            <dl>\r\n                {/* <dt>Title</dt>\r\n                <dd>{this.state.Booklist.Title}</dd> */}\r\n                <dt>Author</dt>\r\n                <dd>{this.state.Booklist.Author}</dd>\r\n                <dt>Total Pages</dt>\r\n                <dd>{this.state.Booklist.Pages}</dd>\r\n                <dt>Category</dt>\r\n                <dd>{this.state.Booklist.Category}</dd>\r\n                <dt>Thoughts</dt>\r\n                <dd>{this.state.Booklist.Thoughts}</dd>\r\n                <dt>Completed</dt>\r\n                <dd>{this.state.Booklist.Completed}</dd>\r\n            </dl>\r\n            <Link to={`/Edit/${this.state.Booklist._id}`} className=\"btn btn-success\">Edit</Link> &nbsp;\r\n            <button value={this.state.pathname.slice(6)} onClick={(e) => this.deleteBook(e.target.value)} className=\"btn btn-danger\">Delete</button></div>\r\n            </div>\r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n};\r\nexport default Show;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Delete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Booklist: [],\r\n            id: '',\r\n        };\r\n    }\r\n\r\n    //// delete method will go here\r\n    delete() {\r\n        fetch('http://localhost:4000/Show/'+this.props._id).then.props.history.push('/')\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n           <div>\r\n               <h3 class=\"panel-title\">\r\n               {this.render.state.Booklist.Title}</h3>\r\n           </div> \r\n           <div class=\"panel-body\">\r\n           <dl>\r\n               <dt>Title:</dt>\r\n               <dd>{this.render.state.Booklist.title}</dd>\r\n                </dl>\r\n                <Link to={`/Edit/${this.state._id}`} class='btn btn-success'>Edit</Link>\r\n                <button onClick={this.delete.id} class=\"btn btn-danger\">Delete</button>\r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Create from './Components/Create';\nimport Edit from './Components/BookEdit';\nimport Show from './Components/Show';\nimport Delete from './Components/Delete';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path='/' component={App}/>\n            <Route path='/Create' component={Create}/>\n            <Route path='/Edit/:id' component={Edit}/>\n            <Route path='/delete' component={Delete}/>\n            <Route path='/show/' component={Show}/> \n        </div>\n    </Router>,    \n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}